// This file was automatically generated by ctpgen
#include "gen_md_spi.h"

extern "C"{

  void mdOnFrontConnected(uint64_t ptr);

  void mdOnFrontDisconnected(uint64_t ptr,int nReason);

  void mdOnHeartBeatWarning(uint64_t ptr,int nTimeLapse);

  void mdOnRspUserLogin(uint64_t ptr,CThostFtdcRspUserLoginField * pRspUserLogin,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRspUserLogout(uint64_t ptr,CThostFtdcUserLogoutField * pUserLogout,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRspQryMulticastInstrument(uint64_t ptr,CThostFtdcMulticastInstrumentField * pMulticastInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRspError(uint64_t ptr,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRspSubMarketData(uint64_t ptr,CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRspUnSubMarketData(uint64_t ptr,CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRspSubForQuoteRsp(uint64_t ptr,CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRspUnSubForQuoteRsp(uint64_t ptr,CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast);

  void mdOnRtnDepthMarketData(uint64_t ptr,CThostFtdcDepthMarketDataField * pDepthMarketData);

  void mdOnRtnForQuoteRsp(uint64_t ptr,CThostFtdcForQuoteRspField * pForQuoteRsp);

}

CThostFtdcMdSpiImpl::CThostFtdcMdSpiImpl(uint64_t ptr):ptr(ptr){
}

CThostFtdcMdSpiImpl::~CThostFtdcMdSpiImpl(){
}


void CThostFtdcMdSpiImpl::OnFrontConnected()
{
  mdOnFrontConnected(ptr);

}

void CThostFtdcMdSpiImpl::OnFrontDisconnected(int nReason)
{
  mdOnFrontDisconnected(ptr,nReason);

}

void CThostFtdcMdSpiImpl::OnHeartBeatWarning(int nTimeLapse)
{
  mdOnHeartBeatWarning(ptr,nTimeLapse);

}

void CThostFtdcMdSpiImpl::OnRspUserLogin(CThostFtdcRspUserLoginField * pRspUserLogin,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspUserLogin(ptr,pRspUserLogin,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRspUserLogout(CThostFtdcUserLogoutField * pUserLogout,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspUserLogout(ptr,pUserLogout,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRspQryMulticastInstrument(CThostFtdcMulticastInstrumentField * pMulticastInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspQryMulticastInstrument(ptr,pMulticastInstrument,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRspError(CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspError(ptr,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRspSubMarketData(CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspSubMarketData(ptr,pSpecificInstrument,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspUnSubMarketData(ptr,pSpecificInstrument,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspSubForQuoteRsp(ptr,pSpecificInstrument,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField * pSpecificInstrument,CThostFtdcRspInfoField * pRspInfo,int nRequestID,bool bIsLast)
{
  mdOnRspUnSubForQuoteRsp(ptr,pSpecificInstrument,pRspInfo,nRequestID,bIsLast);

}

void CThostFtdcMdSpiImpl::OnRtnDepthMarketData(CThostFtdcDepthMarketDataField * pDepthMarketData)
{
  mdOnRtnDepthMarketData(ptr,pDepthMarketData);

}

void CThostFtdcMdSpiImpl::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField * pForQuoteRsp)
{
  mdOnRtnForQuoteRsp(ptr,pForQuoteRsp);

}
